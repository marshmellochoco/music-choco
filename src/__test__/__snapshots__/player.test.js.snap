// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Player test should render the player correctly 1`] = `
<Provider
  store={
    Object {
      "@@observable": [Function],
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Player>
    <div
      className="player"
      tabIndex="0"
    >
      <div>
        <ReactPlayer
          config={
            Object {
              "dailymotion": Object {
                "params": Object {
                  "api": 1,
                  "endscreen-enable": false,
                },
              },
              "facebook": Object {
                "appId": "1309697205772819",
                "attributes": Object {},
                "playerId": null,
                "version": "v3.3",
              },
              "file": Object {
                "attributes": Object {},
                "dashVersion": "3.1.3",
                "flvVersion": "1.5.0",
                "forceAudio": false,
                "forceDASH": false,
                "forceFLV": false,
                "forceHLS": false,
                "forceVideo": false,
                "hlsOptions": Object {},
                "hlsVersion": "0.14.16",
                "tracks": Array [],
              },
              "mixcloud": Object {
                "options": Object {
                  "hide_cover": 1,
                },
              },
              "soundcloud": Object {
                "options": Object {
                  "buying": false,
                  "download": false,
                  "liking": false,
                  "sharing": false,
                  "show_comments": false,
                  "show_playcount": false,
                  "visual": true,
                },
              },
              "twitch": Object {
                "options": Object {},
                "playerId": null,
              },
              "vidyard": Object {
                "options": Object {},
              },
              "vimeo": Object {
                "playerOptions": Object {
                  "autopause": false,
                  "byline": false,
                  "portrait": false,
                  "title": false,
                },
              },
              "wistia": Object {
                "customControls": null,
                "options": Object {},
                "playerId": null,
              },
              "youtube": Object {
                "embedOptions": Object {},
                "onUnstarted": [Function],
                "playerVars": Object {
                  "iv_load_policy": 3,
                  "modestbranding": 1,
                  "playsinline": 1,
                  "rel": 0,
                  "showinfo": 0,
                },
              },
            }
          }
          controls={false}
          fallback={null}
          height="0"
          light={false}
          loop={false}
          muted={false}
          onBuffer={[Function]}
          onBufferEnd={[Function]}
          onClickPreview={[Function]}
          onDisablePIP={[Function]}
          onDuration={[Function]}
          onEnablePIP={[Function]}
          onEnded={[Function]}
          onError={[Function]}
          onPause={[Function]}
          onPlay={[Function]}
          onProgress={[Function]}
          onReady={[Function]}
          onSeek={[Function]}
          onStart={[Function]}
          pip={false}
          playbackRate={1}
          playing={false}
          playsinline={false}
          previewTabIndex={0}
          progressInterval={1000}
          stopOnUnmount={true}
          style={Object {}}
          url="http://118.100.207.12:4000/api/song/play/60b67f66f747a945dcc5d27c"
          volume={1}
          width="0"
          wrapper="div"
        >
          <div
            style={
              Object {
                "height": "0",
                "width": "0",
              }
            }
          >
            <Suspense
              fallback={null}
            >
              <Player
                activePlayer={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_init": [Function],
                    "_payload": Object {
                      "_result": [Function],
                      "_status": 1,
                    },
                  }
                }
                config={
                  Object {
                    "attributes": Object {},
                    "dailymotion": Object {
                      "params": Object {
                        "api": 1,
                        "endscreen-enable": false,
                      },
                    },
                    "dashVersion": "3.1.3",
                    "facebook": Object {
                      "appId": "1309697205772819",
                      "attributes": Object {},
                      "playerId": null,
                      "version": "v3.3",
                    },
                    "file": Object {
                      "attributes": Object {},
                      "dashVersion": "3.1.3",
                      "flvVersion": "1.5.0",
                      "forceAudio": false,
                      "forceDASH": false,
                      "forceFLV": false,
                      "forceHLS": false,
                      "forceVideo": false,
                      "hlsOptions": Object {},
                      "hlsVersion": "0.14.16",
                      "tracks": Array [],
                    },
                    "flvVersion": "1.5.0",
                    "forceAudio": false,
                    "forceDASH": false,
                    "forceFLV": false,
                    "forceHLS": false,
                    "forceVideo": false,
                    "hlsOptions": Object {},
                    "hlsVersion": "0.14.16",
                    "mixcloud": Object {
                      "options": Object {
                        "hide_cover": 1,
                      },
                    },
                    "soundcloud": Object {
                      "options": Object {
                        "buying": false,
                        "download": false,
                        "liking": false,
                        "sharing": false,
                        "show_comments": false,
                        "show_playcount": false,
                        "visual": true,
                      },
                    },
                    "tracks": Array [],
                    "twitch": Object {
                      "options": Object {},
                      "playerId": null,
                    },
                    "vidyard": Object {
                      "options": Object {},
                    },
                    "vimeo": Object {
                      "playerOptions": Object {
                        "autopause": false,
                        "byline": false,
                        "portrait": false,
                        "title": false,
                      },
                    },
                    "wistia": Object {
                      "customControls": null,
                      "options": Object {},
                      "playerId": null,
                    },
                    "youtube": Object {
                      "embedOptions": Object {},
                      "onUnstarted": [Function],
                      "playerVars": Object {
                        "iv_load_policy": 3,
                        "modestbranding": 1,
                        "playsinline": 1,
                        "rel": 0,
                        "showinfo": 0,
                      },
                    },
                  }
                }
                controls={false}
                fallback={null}
                height="0"
                key="file"
                light={false}
                loop={false}
                muted={false}
                onBuffer={[Function]}
                onBufferEnd={[Function]}
                onClickPreview={[Function]}
                onDisablePIP={[Function]}
                onDuration={[Function]}
                onEnablePIP={[Function]}
                onEnded={[Function]}
                onError={[Function]}
                onPause={[Function]}
                onPlay={[Function]}
                onProgress={[Function]}
                onReady={[Function]}
                onSeek={[Function]}
                onStart={[Function]}
                pip={false}
                playbackRate={1}
                playing={false}
                playsinline={false}
                previewTabIndex={0}
                progressInterval={1000}
                stopOnUnmount={true}
                style={Object {}}
                url="http://118.100.207.12:4000/api/song/play/60b67f66f747a945dcc5d27c"
                volume={1}
                width="0"
                wrapper="div"
              />
            </Suspense>
          </div>
        </ReactPlayer>
        <div
          className="player-container"
        >
          <div
            className="player-playing"
          >
            <div
              className="icon"
            >
              <img
                alt=""
                onError={[Function]}
                src="http://118.100.207.12:4000/api/album/ico/60b67f1ff747a945dcc5d27b"
              />
            </div>
            <div
              className="title"
            >
              To the Moon - Main Theme
            </div>
            <div
              className="artist"
            >
              Kan Gao
            </div>
          </div>
          <div
            className="player-control"
          >
            <svg
              className="control-button prev"
              onClick={[Function]}
              viewBox="0 0 24 24"
            >
              <path
                d="M6,18V6H8V18H6M9.5,12L18,6V18L9.5,12Z"
                fill="currentColor"
              />
            </svg>
            <svg
              className="control-button play"
              fill="none"
              onClick={[Function]}
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
              <path
                d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
            <svg
              className="control-button next"
              onClick={[Function]}
              viewBox="0 0 24 24"
            >
              <path
                d="M16,18H18V6H16M6,18L14.5,12L6,6V18Z"
                fill="currentColor"
              />
            </svg>
          </div>
          <div
            className="player-volume"
          >
            <svg
              className="volume-icon"
              fill="currentColor"
              onClick={[Function]}
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clipRule="evenodd"
                d="M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM14.657 2.929a1 1 0 011.414 0A9.972 9.972 0 0119 10a9.972 9.972 0 01-2.929 7.071 1 1 0 01-1.414-1.414A7.971 7.971 0 0017 10c0-2.21-.894-4.208-2.343-5.657a1 1 0 010-1.414zm-2.829 2.828a1 1 0 011.415 0A5.983 5.983 0 0115 10a5.984 5.984 0 01-1.757 4.243 1 1 0 01-1.415-1.415A3.984 3.984 0 0013 10a3.983 3.983 0 00-1.172-2.828 1 1 0 010-1.415z"
                fillRule="evenodd"
              />
            </svg>
            <Slider
              id="volumeSlider"
              onChange={[Function]}
              transform={0}
            >
              <div
                className="slider"
              >
                <div
                  className="slider-front"
                  style={
                    Object {
                      "transform": "translateX(0%)",
                    }
                  }
                />
                <input
                  className="slider-back"
                  onChange={[Function]}
                  type="range"
                />
              </div>
            </Slider>
          </div>
          <div
            className="player-timeline"
          >
            <div
              className="player-time"
              style={
                Object {
                  "textAlign": "right",
                }
              }
            >
              00
               
              :
               
              00
            </div>
            <Slider
              id="timelineSlider"
              onChange={[Function]}
              transform={-100}
            >
              <div
                className="slider"
              >
                <div
                  className="slider-front"
                  style={
                    Object {
                      "transform": "translateX(-100%)",
                    }
                  }
                />
                <input
                  className="slider-back"
                  onChange={[Function]}
                  type="range"
                />
              </div>
            </Slider>
            <div
              className="player-time"
              style={
                Object {
                  "textAlign": "left",
                }
              }
            >
              04
               
              :
               
              56
            </div>
          </div>
        </div>
      </div>
    </div>
  </Player>
</Provider>
`;
