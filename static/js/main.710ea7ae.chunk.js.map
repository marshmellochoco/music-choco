{"version":3,"sources":["store/reducers/queueReducer.js","store/reducers/songDataReducer.js","store/reducers/playerReducer.js","store/reducers/authReducer.js","store/rootReducer.js","pages/AlbumPage/AlbumPageComponent.js","store/actions/songDataAction.js","store/actions/queueAction.js","store/actions/playerActions.js","pages/AlbumPage/AlbumPageContainer.js","common/AudioPlayer/AudioPlayerComponent.js","common/AudioPlayer/AudioPlayerContainer.js","common/Queue/QueueComponent.js","common/Queue/QueueListComponent.js","common/Queue/QueueContainer.js","common/Search/SearchComponent.js","common/Search/SearchContainer.js","pages/HomePage/HomePageComponent.js","pages/HomePage/HomePageContainer.js","store/actions/authActions.js","pages/LoginPage/LoginPageComponent.js","pages/LoginPage/LoginPageContainer.js","MainComponent.js","MainContainer.js","index.js"],"names":["initState","queue","randomQueue","queueData","loading","openQueue","songData","songId","title","duration","albumname","albumId","artist","playing","loop","localStorage","getItem","random","volume","parseFloat","token","user","rootReducer","combineReducers","queueReducer","state","action","type","sort","Math","includes","songDataReducer","playerReducer","setItem","authReducer","AlbumPageComponent","playingSong","album","albumImg","errorImg","songs","setAlbumToQueue","setSong","addQueue","albumStyle","css","albumHeader","albumListStyle","albumListHeaderStyle","albumListItemStyle","to","path","mdiArrowLeft","alt","src","onClick","onError","e","target","className","map","s","i","_id","onContextMenu","fill","viewBox","xmlns","d","floor","songList","setSongData","setPlayingSong","setQueue","setLoading","setPlaying","AlbumPageContainer","apiUrl","process","useState","setSongs","setAlbum","setArtist","id","useParams","useSelector","dispatch","useDispatch","useEffect","axios","get","then","res","data","catch","console","log","a","length","AudioPlayerComponent","props","playerStyle","playerDetailStyle","width","height","url","songUrl","onStart","setCurrentTime","onProgress","playedSeconds","onEnded","playerPlayingDetail","albumUrl","playerControl","nextSong","prevSong","playPause","playerVolume","lastVolume","changeVolume","toggleQueue","playerTimeline","currentTime","setClickedTime","Slider","onChange","transform","sliderStyle","sliderFrontStyle","sliderBackStyle","style","value","playerPlayingStyle","playerIconStyle","playerTitleStyle","playerArtistStyle","playerControlStyle","mdiSkipPrevious","mdiPauseCircleOutline","mdiPlayCircleOutline","mdiSkipNext","playerVolumeStyle","mdiArchive","mdiVolumeMute","mdiVolumeHigh","playerTimelineStyle","getTime","time","AudioPlayerContainer","setLastVolume","ref","createRef","percent","second","current","seekTo","q","indexOf","ceil","vol","error","setVolume","play","QueueComponent","isLoop","isRandom","toggleRandom","toggleLoop","handleDragDrop","queueList","queueStyle","queueHeaderStyle","queueListStyle","mdiShuffle","mdiSync","onDragEnd","droppableId","provided","droppableProps","innerRef","placeholder","QueueListComponent","skipQueue","removeQueue","draggableId","index","snapshot","isDragging","draggableProps","dragHandleProps","datakey","mdiDelete","QueueContainer","qdCache","found","j","push","result","getQueueData","setQueueData","qd","qdList","item","document","getElementById","scrollIntoView","clickedItem","currentTarget","getAttribute","splice","destination","source","reorderedSong","SearchComponent","albums","imageUrl","albumSearch","songSearch","playSong","addSong","handleImageError","handlePlayAlbum","albumCardStyle","songListStyle","mdiPlayCircle","preventDefault","SearchContainer","search","setAlbumSearch","setSongSearch","songListData","forEach","HomePageComponent","HomePageContainer","setToken","LoginPageComponent","setUsername","setPassword","login","signup","err","loginStyle","loginLayoutStyle","formFieldStyle","LoginPageContainer","username","password","setErr","post","credentials","authToken","userid","MainComponent","handleLogout","setSearch","appContainerStyle","appStyle","appHeaderStyle","leftHeaderStyle","searchbarStyle","loggedUserStyle","basename","mdiMagnify","mdiAccountCircle","size","exact","MainContainer","uid","headers","Authorization","response","status","window","location","reload","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.710ea7ae.chunk.js","sourcesContent":["const initState = {\r\n    queue: [],\r\n    randomQueue: [],\r\n    queueData: [],\r\n    loading: false,\r\n    openQueue: false,\r\n};\r\n\r\nexport const queueReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_QUEUE\":\r\n            return {\r\n                ...state,\r\n                queue: [...action.queue],\r\n                randomQueue: [...action.queue].sort(() => Math.random() - 0.5),\r\n            };\r\n        case \"ADD_QUEUE\":\r\n            if (state.queue.includes(action.songId)) {\r\n                return state;\r\n            }\r\n            return {\r\n                ...state,\r\n                queue: [...state.queue, action.songId],\r\n                randomQueue: [...state.queue, action.songId].sort(\r\n                    () => Math.random() - 0.5\r\n                ),\r\n            };\r\n        case \"SET_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n            };\r\n        case \"SET_QUEUE_DATA\":\r\n            return {\r\n                ...state,\r\n                queueData: action.queueData,\r\n            };\r\n\r\n        case \"TOGGLE_QUEUE\":\r\n            return {\r\n                ...state,\r\n                openQueue: !state.openQueue,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initState = {\r\n    songData: {\r\n        songId: \"\",\r\n        title: \"\",\r\n        duration: 0,\r\n        albumname: \"\",\r\n        albumId: \"\",\r\n        artist: \"\",\r\n    },\r\n};\r\n\r\nexport const songDataReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_SONG_DATA\":\r\n            return {\r\n                ...state,\r\n                songData: action.songData,\r\n            };\r\n        case \"SET_PLAYING_SONG\":\r\n            return {\r\n                ...state,\r\n                songData: { ...state.songData, songId: action.songId },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initState = {\r\n    playing: false,\r\n    loop: localStorage.getItem(\"playerLoop\") === \"true\",\r\n    random: localStorage.getItem(\"playerRandom\") === \"true\",\r\n    volume:\r\n        localStorage.getItem(\"playerVolume\") &&\r\n        localStorage.getItem(\"playerVolume\") !== \"null\"\r\n            ? parseFloat(localStorage.getItem(\"playerVolume\"))\r\n            : 1,\r\n};\r\n\r\nexport const playerReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_PLAYING\":\r\n            return {\r\n                ...state,\r\n                playing: action.playing,\r\n            };\r\n        case \"SET_VOLUME\":\r\n            localStorage.setItem(\"playerVolume\", action.volume);\r\n            return {\r\n                ...state,\r\n                volume: action.volume,\r\n            };\r\n        case \"TOGGLE_LOOP\":\r\n            localStorage.setItem(\"playerLoop\", !state.loop);\r\n            return {\r\n                ...state,\r\n                loop: !state.loop,\r\n            };\r\n        case \"TOGGLE_RANDOM\":\r\n            localStorage.setItem(\"playerRandom\", !state.random);\r\n            return {\r\n                ...state,\r\n                random: !state.random,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initState = {\r\n    token: localStorage.getItem(\"TOKEN\"),\r\n    user: localStorage.getItem(\"UID\"),\r\n};\r\n\r\nexport const authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_TOKEN\":\r\n            localStorage.setItem(\"TOKEN\", action.token);\r\n            localStorage.setItem(\"UID\", action.user);\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                user: action.user,\r\n            };\r\n        case \"RESET_TOKEN\":\r\n            localStorage.setItem(\"TOKEN\", \"\");\r\n            localStorage.setItem(\"UID\", \"\");\r\n            return {\r\n                ...state,\r\n                token: \"\",\r\n                user: \"\",\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { queueReducer } from \"./reducers/queueReducer\";\r\nimport { songDataReducer } from \"./reducers/songDataReducer\";\r\nimport { playerReducer } from \"./reducers/playerReducer\";\r\nimport { authReducer } from \"./reducers/authReducer\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    queueReducer,\r\n    songDataReducer,\r\n    playerReducer,\r\n    authReducer,\r\n});\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiArrowLeft } from \"@mdi/js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const AlbumPageComponent = ({\r\n    playingSong,\r\n    album,\r\n    artist,\r\n    albumImg,\r\n    errorImg,\r\n    songs,\r\n    setAlbumToQueue,\r\n    setSong,\r\n    addQueue,\r\n}) => {\r\n    // styles\r\n    const albumStyle = css`\r\n        & > a {\r\n            display: flex;\r\n            align-items: center;\r\n            width: min-content;\r\n            text-decoration: none;\r\n            font-size: 1.2em;\r\n            margin: 1em 0;\r\n            font-weight: bold;\r\n            color: var(--contrast-color);\r\n            & > svg {\r\n                padding: 0 1rem;\r\n                width: 1em;\r\n                height: 100%;\r\n            }\r\n        }\r\n        & > a:hover {\r\n            text-decoration: underline;\r\n        }\r\n    `;\r\n\r\n    const albumHeader = css`\r\n        margin: 1rem 0 2rem 0;\r\n        display: grid;\r\n        grid-template-columns: 13rem 1fr;\r\n        img {\r\n            width: 12rem;\r\n            cursor: pointer;\r\n            opacity: 1;\r\n            background-color: white;\r\n        }\r\n\r\n        img:hover {\r\n            opacity: 0.7;\r\n        }\r\n\r\n        .album {\r\n            display: inline-block;\r\n            align-self: flex-end;\r\n        }\r\n    `;\r\n\r\n    const albumListStyle = css`\r\n        list-style-type: none;\r\n        padding: 0;\r\n        margin-right: 1rem;\r\n\r\n        & > li {\r\n            padding: 0.8em 0;\r\n            padding-left: 1rem;\r\n            display: grid;\r\n            grid-template-columns: 4rem minmax(0, 1fr) 4rem 5rem;\r\n        }\r\n        & > hr {\r\n            margin: 0;\r\n            border: 1px solid var(--secondary-color);\r\n        }\r\n\r\n        & .activeItem {\r\n            background-color: var(--thirtiary-color);\r\n            color: var(--primary-color);\r\n        }\r\n    `;\r\n\r\n    const albumListHeaderStyle = css`\r\n        font-size: 0.8em;\r\n    `;\r\n\r\n    const albumListItemStyle = css`\r\n        background-color: var(--primary-color);\r\n\r\n        & .title {\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n            white-space: nowrap;\r\n            width: 100%;\r\n        }\r\n\r\n        &:hover {\r\n            background-color: var(--secondary-color);\r\n        }\r\n\r\n        div {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n\r\n        .icon {\r\n            fill: transparent;\r\n            margin: auto;\r\n            width: 2em;\r\n        }\r\n    `;\r\n\r\n    // markdown\r\n    const songList = ({ songs, setSong, addQueue }) => {\r\n        return songs.map((s, i) => (\r\n            <li\r\n                css={albumListItemStyle}\r\n                className={`${playingSong === s._id ? \"activeItem\" : \"\"}`}\r\n                key={s._id}\r\n                onClick={() => setSong(s._id)}\r\n                onContextMenu={() => addQueue(s._id)}\r\n            >\r\n                <div>{i + 1}</div>\r\n                <div className=\"title\">{s.title}</div>\r\n                <div className=\"icon\" onClick={() => addQueue(s._id)}>\r\n                    <svg\r\n                        fill=\"currentColor\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path d=\"M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM14 11a1 1 0 011 1v1h1a1 1 0 110 2h-1v1a1 1 0 11-2 0v-1h-1a1 1 0 110-2h1v-1a1 1 0 011-1z\" />\r\n                    </svg>\r\n                </div>\r\n                <div>\r\n                    {(s.duration / 60 < 10 ? \"0\" : \"\") +\r\n                        Math.floor(s.duration / 60)}{\" \"}\r\n                    : {(s.duration % 60 < 10 ? \"0\" : \"\") + (s.duration % 60)}\r\n                </div>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div css={albumStyle}>\r\n            <Link to=\"/\">\r\n                <Icon path={mdiArrowLeft} /> Back\r\n            </Link>\r\n            <div css={albumHeader}>\r\n                <img\r\n                    alt={album}\r\n                    src={albumImg}\r\n                    onClick={() => setAlbumToQueue()}\r\n                    onError={(e) => (e.target.src = errorImg)}\r\n                />\r\n\r\n                <div className=\"album\">\r\n                    <h1>{album}</h1>\r\n                    <h2>{artist}</h2>\r\n                </div>\r\n            </div>\r\n            <ul css={albumListStyle}>\r\n                <li css={albumListHeaderStyle}>\r\n                    <div>#</div>\r\n                    <div className=\"title\">Title</div>\r\n                    <div />\r\n                    <div>Duration</div>\r\n                </li>\r\n                <hr />\r\n                {songList({ songs, setSong: setSong, addQueue: addQueue })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n","export const setSongData = (songData) => {\r\n    return {\r\n        type: \"SET_SONG_DATA\",\r\n        songData,\r\n    };\r\n};\r\n\r\nexport const setPlayingSong = (songId) => {\r\n    return {\r\n        type: \"SET_PLAYING_SONG\",\r\n        songId,\r\n    };\r\n};\r\n","export const setQueue = (queue) => {\r\n    let randQueue = [...queue];\r\n    return {\r\n        type: \"SET_QUEUE\",\r\n        queue,\r\n    };\r\n};\r\n\r\nexport const addQueue = (songId) => {\r\n    return {\r\n        type: \"ADD_QUEUE\",\r\n        songId,\r\n    };\r\n};\r\n\r\nexport const setLoading = (loading) => {\r\n    return {\r\n        type: \"SET_LOADING\",\r\n        loading,\r\n    };\r\n};\r\n\r\nexport const setQueueData = (queueData) => {\r\n    return {\r\n        type: \"SET_QUEUE_DATA\",\r\n        queueData,\r\n    };\r\n};\r\n\r\nexport const toggleQueue = () => {\r\n    console.log(\"toggle\");\r\n    return {\r\n        type: \"TOGGLE_QUEUE\",\r\n    };\r\n};\r\n","export const toggleLoop = () => {\r\n    return {\r\n        type: \"TOGGLE_LOOP\",\r\n    };\r\n};\r\n\r\nexport const toggleRandom = () => {\r\n    return {\r\n        type: \"TOGGLE_RANDOM\",\r\n    };\r\n};\r\n\r\nexport const setPlaying = (playing) => {\r\n    return {\r\n        type: \"SET_PLAYING\",\r\n        playing,\r\n    };\r\n};\r\n\r\nexport const setVolume = (volume) => {\r\n    var vol = volume;\r\n    if (volume > 1) {\r\n        vol = 1;\r\n        console.error(\"Invalid volume\", vol);\r\n    }\r\n    return {\r\n        type: \"SET_VOLUME\",\r\n        volume: vol,\r\n    };\r\n};\r\n","import { AlbumPageComponent } from \"./AlbumPageComponent\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { setPlayingSong } from \"../../store/actions/songDataAction\";\r\nimport { addQueue, setQueue } from \"../../store/actions/queueAction\";\r\nimport { setPlaying } from \"../../store/actions/playerActions\";\r\n\r\nexport const AlbumPageContainer = () => {\r\n    const apiUrl = process.env.REACT_APP_API_URL;\r\n    const [songs, setSongs] = useState([]);\r\n    const [album, setAlbum] = useState(\"\");\r\n    const [artist, setArtist] = useState(\"\");\r\n\r\n    const songList = [];\r\n    let { id } = useParams();\r\n\r\n    const playingSong = useSelector(\r\n        (state) => state.songDataReducer.songData.songId\r\n    );\r\n    const queue = useSelector((state) => state.queueReducer.queue);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        axios.get(`${apiUrl}/album/${id}`).then((res) => {\r\n            setAlbum(res.data.albumname);\r\n            setArtist(res.data.artist);\r\n        });\r\n\r\n        axios\r\n            .get(`${apiUrl}/album/${id}`)\r\n            .then((res) => setSongs(res.data.songs))\r\n            .catch((e) => console.log(e));\r\n    }, [id, apiUrl]);\r\n\r\n    const setSong = async (id) => {\r\n        // play the selected song and add it to the queue\r\n        dispatch(addQueue(id));\r\n        dispatch(setPlayingSong(id));\r\n        dispatch(setPlaying(true));\r\n    };\r\n\r\n    const setAlbumToQueue = async () => {\r\n        // play the entier album and replace the existing queue\r\n        dispatch(setQueue(songList));\r\n        dispatch(setPlayingSong(songList[0]));\r\n        dispatch(setPlaying(true));\r\n    };\r\n\r\n    const addToQueue = (id) => {\r\n        // add the song to the queue\r\n        if (queue.length === 0) dispatch(setPlayingSong(id));\r\n        dispatch(addQueue(id));\r\n    };\r\n\r\n    return (\r\n        <AlbumPageComponent\r\n            playingSong={playingSong}\r\n            album={album}\r\n            artist={artist}\r\n            albumImg={`${apiUrl}/album/ico/${id}`}\r\n            errorImg={\"https://f4.bcbits.com/img/a4139357031_10.jpg\"}\r\n            songs={songs}\r\n            setAlbumToQueue={setAlbumToQueue}\r\n            setSong={setSong}\r\n            addQueue={addToQueue}\r\n        />\r\n    );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport Icon from \"@mdi/react\";\r\nimport {\r\n    mdiArchive,\r\n    mdiPauseCircleOutline,\r\n    mdiPlayCircleOutline,\r\n    mdiSkipNext,\r\n    mdiSkipPrevious,\r\n    mdiVolumeHigh,\r\n    mdiVolumeMute,\r\n} from \"@mdi/js\";\r\n\r\nexport const AudioPlayerComponent = (props) => {\r\n    // styles\r\n    const playerStyle = css`\r\n        font-size: 0.8em;\r\n        width: 98%;\r\n        padding: 10px 1%;\r\n        background-color: #303030;\r\n        color: #d0d0d0;\r\n        overflow: hidden;\r\n        position: absolute;\r\n        bottom: 0;\r\n\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    `;\r\n\r\n    const playerDetailStyle = css`\r\n        display: grid;\r\n        grid-template-columns: minmax(2rem, 1fr) minmax(4rem, 2fr) minmax(\r\n                2rem,\r\n                0.8fr\r\n            );\r\n        grid-template-rows: 1fr 1fr;\r\n    `;\r\n\r\n    // markdown\r\n    return (\r\n        <div css={playerStyle}>\r\n            <ReactPlayer\r\n                width=\"0\"\r\n                height=\"0\"\r\n                // ref={ref}\r\n                loop={false}\r\n                url={props.songUrl}\r\n                playing={props.playing}\r\n                volume={props.volume}\r\n                onStart={() => props.setCurrentTime(0)}\r\n                onProgress={(e) => props.onProgress(e.playedSeconds)}\r\n                onEnded={props.onEnded}\r\n            />\r\n            <div css={playerDetailStyle}>\r\n                {playerPlayingDetail({\r\n                    songData: props.songData,\r\n                    albumUrl: props.albumUrl,\r\n                })}\r\n                {playerControl({\r\n                    playing: props.playing,\r\n                    nextSong: props.nextSong,\r\n                    prevSong: props.prevSong,\r\n                    playPause: props.playPause,\r\n                })}\r\n                {playerVolume({\r\n                    volume: props.volume,\r\n                    lastVolume: props.lastVolume,\r\n                    changeVolume: props.changeVolume,\r\n                    toggleQueue: props.toggleQueue,\r\n                })}\r\n                {playerTimeline({\r\n                    currentTime: props.currentTime,\r\n                    duration: props.songData.duration,\r\n                    setClickedTime: props.setClickedTime,\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Slider = ({ onChange, transform }) => {\r\n    const sliderStyle = css`\r\n        width: 96%;\r\n        margin: auto 2%;\r\n        background-color: grey;\r\n        height: 0.3em;\r\n        border-radius: 2px;\r\n        overflow: hidden;\r\n    `;\r\n\r\n    const sliderFrontStyle = css`\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: green;\r\n    `;\r\n\r\n    const sliderBackStyle = css`\r\n        cursor: pointer;\r\n        width: 100%;\r\n        height: 100%;\r\n        opacity: 0;\r\n        margin: auto 0;\r\n        float: right;\r\n        transform: translateY(-100%);\r\n    `;\r\n\r\n    return (\r\n        <div css={sliderStyle}>\r\n            <div\r\n                css={sliderFrontStyle}\r\n                style={{ transform: `translateX(${transform}%)` }}\r\n            />\r\n            <input\r\n                css={sliderBackStyle}\r\n                type=\"range\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst playerPlayingDetail = ({ songData, albumUrl }) => {\r\n    // styles\r\n    const playerPlayingStyle = css`\r\n        margin: auto 0;\r\n        grid-row: 1/3;\r\n        text-align: left;\r\n        display: grid;\r\n        grid-template-columns: 64px 1fr;\r\n        grid-template-rows: 1fr 1fr;\r\n        @media (max-width: 768px) {\r\n            display: flex;\r\n            flex-direction: column;\r\n        }\r\n    `;\r\n\r\n    const playerIconStyle = css`\r\n        grid-row: 1/3;\r\n        width: 64px;\r\n        height: 64px;\r\n\r\n        & > img {\r\n            max-width: 64px;\r\n            max-height: 64px;\r\n            background-color: white;\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n            display: none;\r\n        }\r\n    `;\r\n\r\n    const playerTitleStyle = css`\r\n        font-size: 1.2em;\r\n        margin: 0 10px;\r\n        display: flex;\r\n        align-items: flex-end;\r\n        white-space: nowrap;\r\n        overflow: hidden !important;\r\n        text-overflow: ellipsis;\r\n    `;\r\n\r\n    const playerArtistStyle = css`\r\n        font-size: 1em;\r\n        margin: 0 10px;\r\n        display: flex;\r\n        align-items: flex-start;\r\n        white-space: nowrap;\r\n        overflow: hidden !important;\r\n        text-overflow: ellipsis;\r\n    `;\r\n\r\n    // markdown\r\n    return (\r\n        <div css={playerPlayingStyle}>\r\n            <div css={playerIconStyle}>\r\n                <img src={albumUrl} />\r\n            </div>\r\n            <div css={playerTitleStyle}>\r\n                {songData && songData.songId ? songData.title : \"---\"}\r\n            </div>\r\n            <div css={playerArtistStyle}>\r\n                {songData && songData.songId ? songData.artist : \"---\"}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst playerControl = ({ playing, playPause, nextSong, prevSong }) => {\r\n    // styles\r\n    const playerControlStyle = css`\r\n        text-align: center;\r\n\r\n        & > svg {\r\n            height: 100%;\r\n            margin: auto;\r\n            width: 1.8em;\r\n            margin: 0px 12px;\r\n            cursor: pointer;\r\n\r\n            &:hover {\r\n                opacity: 0.7;\r\n            }\r\n        }\r\n\r\n        & > .play {\r\n            width: 2.5em;\r\n        }\r\n    `;\r\n\r\n    // markdown\r\n    return (\r\n        <div css={playerControlStyle}>\r\n            <Icon path={mdiSkipPrevious} onClick={prevSong} />\r\n            {playing ? (\r\n                <Icon\r\n                    path={mdiPauseCircleOutline}\r\n                    className=\"play\"\r\n                    onClick={() => playPause(false)}\r\n                />\r\n            ) : (\r\n                <Icon\r\n                    path={mdiPlayCircleOutline}\r\n                    className=\"play\"\r\n                    onClick={() => playPause(true)}\r\n                />\r\n            )}\r\n            <Icon path={mdiSkipNext} onClick={nextSong} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst playerVolume = ({ volume, lastVolume, changeVolume, toggleQueue }) => {\r\n    // styles\r\n    const playerVolumeStyle = css`\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        grid-row: 1/3;\r\n        grid-column: 3;\r\n\r\n        & svg {\r\n            padding: 4px;\r\n            width: 1.8em;\r\n            cursor: pointer;\r\n            margin: 0 10px;\r\n\r\n            &:hover {\r\n                opacity: 0.7;\r\n            }\r\n        }\r\n\r\n        & > div {\r\n            display: flex;\r\n            & > div {\r\n                @media (max-width: 768px) {\r\n                    display: none;\r\n                }\r\n            }\r\n        }\r\n    `;\r\n\r\n    // markdown\r\n    return (\r\n        <div css={playerVolumeStyle}>\r\n            <div>\r\n                <Icon path={mdiArchive} onClick={toggleQueue} />\r\n            </div>\r\n\r\n            <div>\r\n                {volume === 0 ? (\r\n                    <Icon\r\n                        path={mdiVolumeMute}\r\n                        onClick={() => changeVolume(lastVolume)}\r\n                    />\r\n                ) : (\r\n                    <Icon\r\n                        path={mdiVolumeHigh}\r\n                        onClick={() => changeVolume(0)}\r\n                    />\r\n                )}\r\n\r\n                <Slider\r\n                    onChange={(value) => {\r\n                        changeVolume(value / 100);\r\n                    }}\r\n                    transform={volume * 100 - 100}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst playerTimeline = ({ currentTime, duration, setClickedTime }) => {\r\n    // styles\r\n    const playerTimelineStyle = css`\r\n        margin: auto 0;\r\n        text-align: center;\r\n        display: grid;\r\n        grid-template-columns: 4rem 10fr 4rem;\r\n        font-size: 0.9em;\r\n    `;\r\n\r\n    const getTime = (time) => {\r\n        return `${time / 60 < 10 ? \"0\" : \"\"} \r\n                    ${Math.floor(time / 60)}\r\n                : ${time % 60 < 10 ? \"0\" : \"\"} ${time % 60}`;\r\n    };\r\n\r\n    // markdown\r\n    return (\r\n        <div css={playerTimelineStyle}>\r\n            <div>{getTime(currentTime)}</div>\r\n\r\n            <Slider\r\n                onChange={setClickedTime}\r\n                transform={(currentTime / duration) * 100 - 100}\r\n            />\r\n\r\n            <div>{getTime(duration)}</div>\r\n        </div>\r\n    );\r\n};\r\n","import { AudioPlayerComponent } from \"./AudioPlayerComponent\";\r\nimport { createRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setPlayingSong } from \"../../store/actions/songDataAction\";\r\nimport { setPlaying, setVolume } from \"../../store/actions/playerActions\";\r\nimport { toggleQueue } from \"../../store/actions/queueAction\";\r\n\r\nexport const AudioPlayerContainer = () => {\r\n    // initialization\r\n    const apiUrl = process.env.REACT_APP_API_URL;\r\n    const songData = useSelector((state) => state.songDataReducer.songData);\r\n    const { queue, randomQueue } = useSelector((state) => state.queueReducer);\r\n    const { playing, volume, loop, random } = useSelector(\r\n        (state) => state.playerReducer\r\n    );\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [lastVolume, setLastVolume] = useState(volume);\r\n    const dispatch = useDispatch();\r\n    const ref = createRef();\r\n\r\n    // functions\r\n    // player functions\r\n    const onProgress = (playedSeconds) => {\r\n        // set the current time as the number of seconds played on the song\r\n        if (Math.floor(playedSeconds) <= songData.duration) {\r\n            setCurrentTime(Math.ceil(playedSeconds));\r\n        }\r\n    };\r\n\r\n    const onEnded = () => {\r\n        // play the next song when the current song has ended, reset the played time\r\n        dispatch(setPlaying(false));\r\n        setCurrentTime(0);\r\n        nextSong();\r\n        dispatch(setPlaying(true));\r\n    };\r\n\r\n    // control functions\r\n    const setClickedTime = (percent) => {\r\n        // seek to the partition of the song according the the percentage of timeline\r\n        let second = (percent / 100) * songData.duration;\r\n        ref.current.seekTo(second, \"second\");\r\n    };\r\n\r\n    const changeVolume = (vol) => {\r\n        // change the volume, if it is unmuted, set volume to the previous volume\r\n        setLastVolume(volume === 0 ? lastVolume : volume);\r\n        dispatch(setVolume(vol));\r\n    };\r\n\r\n    const prevSong = () => {\r\n        // play the previous song, if no previous song, restart the song\r\n        // if is random, use the random queue list else use the normal queue list\r\n        if (random) {\r\n            if (randomQueue.indexOf(songData.songId) === 0) {\r\n                setClickedTime(0);\r\n            } else {\r\n                dispatch(\r\n                    setPlayingSong(\r\n                        randomQueue[randomQueue.indexOf(songData.songId) - 1]\r\n                    )\r\n                );\r\n            }\r\n        } else {\r\n            if (queue.indexOf(songData.songId) === 0) {\r\n                setClickedTime(0);\r\n            } else {\r\n                dispatch(\r\n                    setPlayingSong(queue[queue.indexOf(songData.songId) - 1])\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const nextSong = () => {\r\n        // play the next song, if is the last song in the list, play nothing\r\n        // if is random, use the random queue list else use the normal queue list\r\n        if (!songData.songId) return;\r\n\r\n        const next = (q) => {\r\n            if (q.indexOf(songData.songId) === q.length - 1) {\r\n                dispatch(setPlayingSong(loop ? q[0] : \"\"));\r\n                if (!loop) dispatch(setPlaying(false));\r\n            } else {\r\n                dispatch(setPlayingSong(q[q.indexOf(songData.songId) + 1]));\r\n            }\r\n        };\r\n\r\n        next(random ? randomQueue : queue);\r\n    };\r\n\r\n    const playPause = (play) => {\r\n        if (songData.songId) {\r\n            dispatch(setPlaying(play));\r\n        } else dispatch(setPlaying(false));\r\n    };\r\n\r\n    const toggleQueueComponent = () => {\r\n        dispatch(toggleQueue());\r\n    };\r\n\r\n    return (\r\n        <AudioPlayerComponent\r\n            songUrl={\r\n                songData.songId ? `${apiUrl}/song/play/${songData.songId}` : \"\"\r\n            }\r\n            albumUrl={\r\n                songData && songData.songId\r\n                    ? `${apiUrl}/album/ico/${songData.albumId}`\r\n                    : \"\"\r\n            }\r\n            playing={playing}\r\n            volume={volume}\r\n            lastVolume={lastVolume}\r\n            songData={songData}\r\n            currentTime={currentTime}\r\n            setCurrentTime={setCurrentTime}\r\n            onProgress={onProgress}\r\n            onEnded={onEnded}\r\n            nextSong={nextSong}\r\n            prevSong={prevSong}\r\n            changeVolume={changeVolume}\r\n            setClickedTime={setClickedTime}\r\n            playPause={playPause}\r\n            toggleQueue={toggleQueueComponent}\r\n        />\r\n    );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiShuffle, mdiSync } from \"@mdi/js\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nexport const QueueComponent = ({\r\n    isLoop,\r\n    isRandom,\r\n    loading,\r\n    toggleRandom,\r\n    toggleLoop,\r\n    handleDragDrop,\r\n    queueList,\r\n    openQueue,\r\n}) => {\r\n    // styles\r\n    const queueStyle = css`\r\n        background-color: var(--secondary-color);\r\n        padding: 0 1rem;\r\n        overflow-y: scroll;\r\n        display: ${openQueue ? \"block\" : \"none\"};\r\n\r\n        & > .loading {\r\n            margin: auto;\r\n        }\r\n\r\n        @media (max-width: 1024px) {\r\n            width: calc(100% - 3rem);\r\n            height: 100%;\r\n            margin-right: 1rem;\r\n            background-color: var(--secondary-color);\r\n        }\r\n    `;\r\n\r\n    const queueHeaderStyle = css`\r\n        display: flex;\r\n        align-items: baseline;\r\n        align-content: flex-end;\r\n        margin-left: auto;\r\n\r\n        & > div {\r\n            display: flex;\r\n            margin-left: auto;\r\n\r\n            & > svg {\r\n                fill: var(--contrast-color);\r\n                width: 2em;\r\n                height: 2em;\r\n                margin: 1rem;\r\n                cursor: pointer;\r\n\r\n                &:hover {\r\n                    opacity: 0.7;\r\n                }\r\n            }\r\n\r\n            & > .active {\r\n                color: var(--primary-color);\r\n            }\r\n        }\r\n    `;\r\n\r\n    const queueListStyle = css`\r\n        list-style-type: none;\r\n        padding-left: 0;\r\n\r\n        & .active {\r\n            background-color: black;\r\n            color: var(--contrast-color);\r\n        }\r\n\r\n        & .dragging {\r\n            background-color: var(--thirtiary-color);\r\n            color: var(--primary-color);\r\n        }\r\n    `;\r\n\r\n    // markdown\r\n    return (\r\n        <div css={queueStyle}>\r\n            <div css={queueHeaderStyle}>\r\n                <h1>Queue</h1>\r\n                <div>\r\n                    <Icon\r\n                        path={mdiShuffle}\r\n                        className={isRandom ? \"active\" : \"\"}\r\n                        onClick={() => toggleRandom()}\r\n                    />\r\n                    <Icon\r\n                        path={mdiSync}\r\n                        className={isLoop ? \"active\" : \"\"}\r\n                        onClick={() => toggleLoop()}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {loading ? (\r\n                <ReactLoading className=\"loading\" type=\"bars\" />\r\n            ) : (\r\n                <DragDropContext onDragEnd={handleDragDrop}>\r\n                    <Droppable droppableId=\"droppable\">\r\n                        {(provided) => (\r\n                            <ul\r\n                                css={queueListStyle}\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                            >\r\n                                {queueList}\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport { mdiDelete } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst queueListStyle = css`\r\n    padding: 3% 4%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 3em 25px;\r\n    grid-template-rows: 1fr 1fr;\r\n\r\n    &:hover {\r\n        background-color: var(--primary-color);\r\n    }\r\n\r\n    & > .title {\r\n        width: 90%;\r\n        white-space: nowrap;\r\n        overflow: hidden !important;\r\n    }\r\n\r\n    & > .album {\r\n        font-size: 0.8em;\r\n        grid-row: 2;\r\n        width: 90%;\r\n        white-space: nowrap;\r\n        overflow: hidden !important;\r\n    }\r\n\r\n    & > .duration {\r\n        display: flex;\r\n        align-self: center;\r\n        grid-row: 1/3;\r\n        grid-column: 2;\r\n    }\r\n\r\n    & .removeButton {\r\n        width: 25px;\r\n        height: 25px;\r\n        grid-row: 1/3;\r\n        grid-column: 3;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-self: center;\r\n    }\r\n`;\r\n\r\nexport const QueueListComponent = ({\r\n    data,\r\n    playingSong,\r\n    skipQueue,\r\n    removeQueue,\r\n}) => {\r\n    return data.map((q, i) => {\r\n        return (\r\n            <Draggable key={q.songId} draggableId={q.songId} index={i}>\r\n                {(provided, snapshot) => (\r\n                    <div\r\n                        id={q.songId}\r\n                        className={`${\r\n                            playingSong === q.songId\r\n                                ? \"active\"\r\n                                : snapshot.isDragging\r\n                                ? \"dragging\"\r\n                                : \"\"\r\n                        }`}\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        datakey={q.songId}\r\n                        onClick={(e) => skipQueue(e)}\r\n                        onContextMenu={(e) => {\r\n                            removeQueue(e);\r\n                        }}\r\n                    >\r\n                        <li css={queueListStyle}>\r\n                            <div className=\"title\">{q.title}</div>\r\n                            <div className=\"album\">{q.albumname}</div>\r\n                            <Icon\r\n                                path={mdiDelete}\r\n                                datakey={q.songId}\r\n                                className={\"removeButton\"}\r\n                                onClick={(e) => removeQueue(e)}\r\n                            />\r\n                            <div className=\"duration\">\r\n                                {\" \"}\r\n                                {(q.duration / 60 < 10 ? \"0\" : \"\") +\r\n                                    Math.floor(q.duration / 60)}{\" \"}\r\n                                :{\" \"}\r\n                                {(q.duration % 60 < 10 ? \"0\" : \"\") +\r\n                                    Math.floor(q.duration % 60)}\r\n                            </div>\r\n                        </li>\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        );\r\n    });\r\n};\r\n","import { QueueComponent } from \"./QueueComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    setPlaying,\r\n    toggleLoop,\r\n    toggleRandom,\r\n} from \"../../store/actions/playerActions\";\r\nimport {\r\n    setLoading,\r\n    setQueue,\r\n    setQueueData,\r\n} from \"../../store/actions/queueAction\";\r\nimport {\r\n    setPlayingSong,\r\n    setSongData,\r\n} from \"../../store/actions/songDataAction\";\r\nimport { QueueListComponent } from \"./QueueListComponent\";\r\n\r\nexport const QueueContainer = ({ openQueue }) => {\r\n    const apiUrl = process.env.REACT_APP_API_URL;\r\n    const { queue, queueData, loading, loop, random } = useSelector(\r\n        (state) => state.queueReducer\r\n    );\r\n    const playingSong = useSelector(\r\n        (state) => state.songDataReducer.songData.songId\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const getQueueData = async (qdCache) => {\r\n            var data = [];\r\n            dispatch(setLoading(true));\r\n\r\n            for (let i = 0; i < queue.length; i++) {\r\n                let found = false;\r\n                for (let j = 0; j < qdCache.length; j++) {\r\n                    if (queue[i] === qdCache[j].songId) {\r\n                        data.push(qdCache[j]);\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!found) {\r\n                    await axios\r\n                        .get(`${apiUrl}/song/${queue[i]}`)\r\n                        .then((result) => {\r\n                            data.push({\r\n                                songId: result.data.songs._id,\r\n                                title: result.data.songs.title,\r\n                                duration: result.data.songs.duration,\r\n                                albumname: result.data.albumname,\r\n                                albumId: result.data._id,\r\n                                artist: result.data.artist,\r\n                            });\r\n                        })\r\n                        .catch((e) => console.log(e));\r\n                }\r\n            }\r\n            return data;\r\n        };\r\n\r\n        getQueueData(queueData).then((res) => {\r\n            dispatch(setQueueData(res));\r\n            dispatch(setLoading(false));\r\n            if (res.length <= 0) return;\r\n            if (playingSong) {\r\n                dispatch(\r\n                    setSongData(\r\n                        res[\r\n                            res\r\n                                .map((qd) => {\r\n                                    return qd.songId;\r\n                                })\r\n                                .indexOf(playingSong)\r\n                        ]\r\n                    )\r\n                );\r\n            }\r\n        });\r\n    }, [queue]); // eslint-disable-line\r\n\r\n    useEffect(() => {\r\n        if (!playingSong) return;\r\n        const qdList = queueData.map((qd) => {\r\n            return qd.songId;\r\n        });\r\n        if (qdList.includes(playingSong))\r\n            dispatch(setSongData(queueData[qdList.indexOf(playingSong)]));\r\n\r\n        const item = document.getElementById(playingSong);\r\n        if (!item) return;\r\n        item.scrollIntoView(false);\r\n    }, [playingSong]); // eslint-disable-line\r\n\r\n    const skipQueue = (e) => {\r\n        // If the item is clicked, and it is not the trash can icon, play the clicked song instead\r\n        let clickedItem = e.currentTarget.getAttribute(\"datakey\");\r\n        if (!queue.includes(clickedItem)) return;\r\n        dispatch(setPlayingSong(clickedItem));\r\n        dispatch(setPlaying(true));\r\n    };\r\n\r\n    const removeQueue = async (e) => {\r\n        // remove the selected song from queue\r\n        let clickedItem = e.currentTarget.getAttribute(\"datakey\");\r\n        if (clickedItem === playingSong) {\r\n            dispatch(setPlayingSong(\"\"));\r\n            dispatch(setPlaying(false));\r\n        }\r\n\r\n        let q = queue;\r\n        q.splice(queue.indexOf(clickedItem), 1);\r\n        dispatch(setQueue(q));\r\n    };\r\n\r\n    const handleDragDrop = (result) => {\r\n        // re-position the queue according to the drop location of the dragged item\r\n        if (!result.destination) return;\r\n\r\n        const songs = queue;\r\n        const [reorderedSong] = songs.splice(result.source.index, 1);\r\n        songs.splice(result.destination.index, 0, reorderedSong);\r\n        dispatch(setQueue(songs));\r\n    };\r\n\r\n    const changeRandom = () => {\r\n        dispatch(toggleRandom());\r\n    };\r\n\r\n    const changeLoop = () => {\r\n        dispatch(toggleLoop());\r\n    };\r\n\r\n    return (\r\n        <QueueComponent\r\n            isLoop={loop}\r\n            isRandom={random}\r\n            loading={loading}\r\n            toggleRandom={changeRandom}\r\n            toggleLoop={changeLoop}\r\n            handleDragDrop={handleDragDrop}\r\n            queueList={QueueListComponent({\r\n                data: queueData.length > 0 ? queueData : [],\r\n                playingSong,\r\n                skipQueue,\r\n                removeQueue,\r\n            })}\r\n            openQueue={openQueue}\r\n        />\r\n    );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiPlayCircle } from \"@mdi/js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SearchComponent = ({\r\n    imageUrl,\r\n    playingSong,\r\n    albumSearch,\r\n    songSearch,\r\n    playSong,\r\n    addSong,\r\n    handleImageError,\r\n    handlePlayAlbum,\r\n}) => {\r\n    // styles\r\n    const albumListStyle = css`\r\n        display: flex;\r\n        overflow-x: scroll;\r\n\r\n        & > a {\r\n            color: white;\r\n            text-decoration: none;\r\n            &:hover {\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n\r\n        & .cardItem {\r\n            margin-right: 1rem;\r\n            margin-bottom: 1rem;\r\n        }\r\n    `;\r\n\r\n    const albumCardStyle = css`\r\n        width: 200px;\r\n        height: 300px;\r\n        padding: 1rem;\r\n        margin-right: 2rem;\r\n        border-radius: 2%;\r\n        color: var(--text-color);\r\n        background-color: var(--secondary-color);\r\n        cursor: pointer;\r\n\r\n        & > img {\r\n            width: 200px;\r\n        }\r\n        & > div {\r\n            display: flex;\r\n            flex-direction: column;\r\n            & > h1 {\r\n                height: 3em;\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                font-size: 1.4em;\r\n                margin: 0;\r\n            }\r\n            & > div {\r\n                display: flex;\r\n                justify-content: space-between;\r\n                & > p {\r\n                    overflow: hidden;\r\n                    font-size: 1.2em;\r\n                    margin: 0;\r\n                }\r\n                & > svg {\r\n                    width: 2rem;\r\n                    &:hover {\r\n                        opacity: 0.7;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `;\r\n\r\n    const songListStyle = css`\r\n        list-style-type: none;\r\n        padding: 0;\r\n        margin-right: 1rem;\r\n\r\n        & > li {\r\n            padding: 0.5rem 1rem;\r\n            height: 60px;\r\n            display: grid;\r\n            grid-template-columns: 70px 20fr 4em;\r\n            cursor: pointer;\r\n\r\n            &:hover {\r\n                background-color: var(--secondary-color);\r\n            }\r\n\r\n            & > div {\r\n                display: flex;\r\n                align-items: center;\r\n            }\r\n\r\n            & > .songDetail {\r\n                display: grid;\r\n                grid-template-rows: 1fr 1fr;\r\n            }\r\n\r\n            & > .songTitle {\r\n                font-size: 1.2em;\r\n                overflow: hidden;\r\n            }\r\n\r\n            & > .album {\r\n                width: 60px;\r\n            }\r\n        }\r\n        & .activeItem {\r\n            background-color: var(--thirtiary-color);\r\n            color: var(--primary-color);\r\n        }\r\n    `;\r\n\r\n    // markdown\r\n    const albumList = (albums) => {\r\n        return albums.map((s) => {\r\n            return (\r\n                <Link css={albumCardStyle} to={`/albums/${s._id}`} key={s._id}>\r\n                    <img\r\n                        src={`${imageUrl}${s._id}`}\r\n                        alt=\"Album Icon\"\r\n                        onError={handleImageError}\r\n                    />\r\n                    <div>\r\n                        <h1>{s.albumname}</h1>\r\n                        <div>\r\n                            <p>{s.artist}</p>\r\n                            <Icon\r\n                                path={mdiPlayCircle}\r\n                                onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    handlePlayAlbum(s._id);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            );\r\n        });\r\n    };\r\n\r\n    const songList = (songs) => {\r\n        return songs.map((s) => {\r\n            return (\r\n                <li\r\n                    key={s.songs._id}\r\n                    onClick={(e) => playSong(s.songs._id)}\r\n                    onContextMenu={(e) => addSong(s.songs._id)}\r\n                    className={playingSong === s.songs._id ? \"activeItem\" : \"\"}\r\n                >\r\n                    <img\r\n                        src={`${imageUrl}${s._id}`}\r\n                        alt=\"album logo\"\r\n                        className=\"album\"\r\n                        onError={handleImageError}\r\n                    />\r\n                    <div className=\"songDetail\">\r\n                        <div className=\"songTitle\">{s.songs.title}</div>\r\n                        <div>{s.artist}</div>\r\n                    </div>\r\n                    <div>\r\n                        {(s.songs.duration / 60 < 10 ? \"0\" : \"\") +\r\n                            Math.floor(s.songs.duration / 60)}{\" \"}\r\n                        :{\" \"}\r\n                        {(s.songs.duration % 60 < 10 ? \"0\" : \"\") +\r\n                            (s.songs.duration % 60)}\r\n                    </div>\r\n                </li>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Albums</h1>\r\n            <div css={albumListStyle}>{albumList(albumSearch)}</div>\r\n            <h1>Songs</h1>\r\n            <ul css={songListStyle}>{songList(songSearch)}</ul>\r\n        </div>\r\n    );\r\n};\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SearchComponent } from \"./SearchComponent\";\r\nimport { setPlayingSong } from \"../../store/actions/songDataAction\";\r\nimport { addQueue, setQueue } from \"../../store/actions/queueAction\";\r\nimport { setPlaying } from \"../../store/actions/playerActions\";\r\n\r\nexport const SearchContainer = ({ search }) => {\r\n    const apiUrl = process.env.REACT_APP_API_URL;\r\n    const imageUrl = `${apiUrl}/album/ico/`;\r\n    const [albumSearch, setAlbumSearch] = useState([]);\r\n    const [songSearch, setSongSearch] = useState([]);\r\n    const playingSong = useSelector(\r\n        (state) => state.songDataReducer.songData.songId\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (search && search !== \"\") {\r\n            axios\r\n                .get(`${apiUrl}/album/search/${search}`)\r\n                .then((result) => setAlbumSearch(result.data))\r\n                .catch((e) => setAlbumSearch([]));\r\n\r\n            axios\r\n                .get(`${apiUrl}/song/search/${search}`)\r\n                .then((result) => setSongSearch(result.data))\r\n                .catch((e) => setSongSearch([]));\r\n        }\r\n    }, [search, apiUrl]);\r\n\r\n    const playSong = (id) => {\r\n        dispatch(addQueue(id));\r\n        dispatch(setPlayingSong(id));\r\n        dispatch(setPlaying(true));\r\n    };\r\n\r\n    const addSong = (id) => {\r\n        // add the song to the queue\r\n        dispatch(addQueue(id));\r\n    };\r\n\r\n    const handleImageError = (e) => {\r\n        // return an alternate image if error\r\n        e.target.src = \"https://f4.bcbits.com/img/a4139357031_10.jpg\";\r\n    };\r\n\r\n    const handlePlayAlbum = async (id) => {\r\n        // play the entire album associated with the card, replace the existing queue with the album list\r\n        var songListData = [];\r\n        await axios\r\n            .get(`${apiUrl}/album/${id}`)\r\n            .then((res) => (songListData = res.data.songs))\r\n            .catch((e) => (songListData = []));\r\n\r\n        var songList = [];\r\n        songListData.forEach((s) => {\r\n            songList.push(s._id);\r\n        });\r\n\r\n        dispatch(setPlayingSong(songList[0]));\r\n        dispatch(setPlaying(true));\r\n        dispatch(setQueue(songList));\r\n    };\r\n\r\n    return (\r\n        <SearchComponent\r\n            imageUrl={imageUrl}\r\n            playingSong={playingSong}\r\n            albumSearch={albumSearch}\r\n            songSearch={songSearch}\r\n            playSong={playSong}\r\n            addSong={addSong}\r\n            handleImageError={handleImageError}\r\n            handlePlayAlbum={handlePlayAlbum}\r\n        />\r\n    );\r\n};\r\n","export const HomePageComponent = () => {\r\n    return <div>hi</div>;\r\n};\r\n","import { HomePageComponent } from \"./HomePageComponent\";\r\n\r\nexport const HomePageContainer = () => {\r\n    return <HomePageComponent />;\r\n};\r\n","export const setToken = (token, user) => {\r\n    return {\r\n        type: \"SET_TOKEN\",\r\n        token,\r\n        user,\r\n    };\r\n};\r\nexport const resetToken = () => {\r\n    return {\r\n        type: \"RESET_TOKEN\",\r\n    };\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\n\r\nexport const LoginPageComponent = ({\r\n    setUsername,\r\n    setPassword,\r\n    login,\r\n    signup,\r\n    err,\r\n}) => {\r\n    // styles\r\n    const loginStyle = css`\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        justify-content: flex-start;\r\n        color: var(--primary-color);\r\n    `;\r\n\r\n    const loginLayoutStyle = css`\r\n        margin: auto;\r\n        background-color: white;\r\n        padding: 2rem;\r\n\r\n        & > h1 {\r\n            margin: 0;\r\n            margin-bottom: 1rem;\r\n        }\r\n\r\n        & button {\r\n            margin: 0.5rem 0;\r\n            width: 100%;\r\n            height: 2rem;\r\n            color: grey;\r\n            border: 1px solid grey;\r\n            background-color: white;\r\n            cursor: pointer;\r\n\r\n            &:hover {\r\n                background-color: var(--thirtiary-color);\r\n                color: var(--primary-color);\r\n            }\r\n        }\r\n\r\n        & #signup {\r\n            background-color: var(--primary-color);\r\n            color: var(--contrast-color);\r\n            &:hover {\r\n                background-color: var(--secondary-color);\r\n            }\r\n        }\r\n    `;\r\n\r\n    const formFieldStyle = css`\r\n        width: 18rem;\r\n        padding: 1rem 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        & > input {\r\n            margin: 0 0;\r\n            height: 1.5em;\r\n        }\r\n    `;\r\n\r\n    // markdown\r\n    return (\r\n        <div css={loginStyle}>\r\n            <div css={loginLayoutStyle}>\r\n                <h1>Login</h1>\r\n                <span\r\n                    css={css`\r\n                        color: red;\r\n                    `}\r\n                >\r\n                    {err === \"\" ? \"\" : err}\r\n                </span>\r\n                <form>\r\n                    <div css={formFieldStyle}>\r\n                        <label>Username: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div css={formFieldStyle}>\r\n                        <label>Password: </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            login();\r\n                        }}\r\n                    >\r\n                        Log In\r\n                    </button>\r\n                    <button\r\n                        id=\"signup\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            signup();\r\n                        }}\r\n                    >\r\n                        Sign Up\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setToken } from \"../../store/actions/authActions\";\r\n\r\nimport { LoginPageComponent } from \"./LoginPageComponent\";\r\n\r\nexport const LoginPageContainer = () => {\r\n    const apiUrl = process.env.REACT_APP_API_URL;\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [err, setErr] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const login = async () => {\r\n        setErr(\"\");\r\n        await axios\r\n            .post(`${apiUrl}/auth/login`, {\r\n                credentials: { username, password },\r\n            })\r\n            .then((result) => {\r\n                dispatch(setToken(result.data.authToken, result.data.userid));\r\n                if (result.data.authToken === \"\") {\r\n                    setErr(\"Invalid username or password.\");\r\n                }\r\n            })\r\n            .catch((err) => setErr(err));\r\n    };\r\n\r\n    const signup = async () => {\r\n        setErr(\"\");\r\n        await axios\r\n            .post(`${apiUrl}/auth/signup`, {\r\n                credentials: { username, password },\r\n            })\r\n            .then((result) => {\r\n                dispatch(setToken(result.data.authToken, result.data.userid));\r\n            })\r\n            .catch((err) => setErr(err));\r\n    };\r\n\r\n    return (\r\n        <LoginPageComponent\r\n            setUsername={setUsername}\r\n            setPassword={setPassword}\r\n            login={login}\r\n            signup={signup}\r\n            err={err}\r\n        />\r\n    );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiAccountCircle, mdiMagnify } from \"@mdi/js\";\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { AlbumPageContainer } from \"./pages/AlbumPage/AlbumPageContainer\";\r\nimport { AudioPlayerContainer } from \"./common/AudioPlayer/AudioPlayerContainer\";\r\nimport { QueueContainer } from \"./common/Queue/QueueContainer\";\r\nimport { SearchContainer } from \"./common/Search/SearchContainer\";\r\nimport { HomePageContainer } from \"./pages/HomePage/HomePageContainer\";\r\nimport { LoginPageContainer } from \"./pages/LoginPage/LoginPageContainer\";\r\n\r\nexport const MainComponent = ({\r\n    username,\r\n    token,\r\n    search,\r\n    openQueue,\r\n    handleLogout,\r\n    setSearch,\r\n}) => {\r\n    // styles\r\n    const appContainerStyle = css`\r\n        height: 90%;\r\n        width: calc(100% - 2rem);\r\n        padding-left: 2rem;\r\n        display: ${openQueue ? \"grid\" : \"block\"};\r\n        grid-template-columns: 1fr 25rem;\r\n        @media (max-width: 1024px) {\r\n            display: block;\r\n        }\r\n    `;\r\n\r\n    const appStyle = css`\r\n        overflow-y: scroll;\r\n        height: 100%;\r\n        padding-right: 1rem;\r\n        @media (max-width: 1024px) {\r\n            display: ${openQueue ? \"none\" : \"block\"};\r\n        }\r\n    `;\r\n\r\n    const appHeaderStyle = css`\r\n        display: flex;\r\n        height: 8vh;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    `;\r\n\r\n    const leftHeaderStyle = css`\r\n        display: flex;\r\n        align-items: center;\r\n        & > h1 {\r\n            min-width: max-content;\r\n        }\r\n    `;\r\n\r\n    const searchbarStyle = css`\r\n        height: 2rem;\r\n        padding: 0 0.5rem;\r\n        margin: 0 1rem;\r\n        display: flex;\r\n        align-self: center;\r\n        background-color: var(--contrast-color);\r\n        border-radius: 2rem;\r\n        min-width: 12rem;\r\n\r\n        & svg {\r\n            align-self: center;\r\n            margin: 0;\r\n            color: var(--primary-color);\r\n            width: 24px;\r\n            height: 24px;\r\n        }\r\n        & input[type=\"text\"] {\r\n            width: 100%;\r\n            display: flex;\r\n            height: 1em;\r\n            font-size: 1em;\r\n            align-self: center;\r\n            border: none;\r\n            background-color: var(--contrast-color);\r\n            outline: none;\r\n        }\r\n    `;\r\n\r\n    const loggedUserStyle = css`\r\n        display: flex;\r\n        height: 2rem;\r\n        min-width: 8rem;\r\n        align-items: center;\r\n        padding: 0 0.5rem;\r\n        margin-right: 1rem;\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--thirtiary-color);\r\n        }\r\n        & > svg {\r\n            margin: 0.5rem;\r\n        }\r\n    `;\r\n\r\n    // markdown\r\n    return (\r\n        <div className=\"App\" onContextMenu={(e) => e.preventDefault()}>\r\n            {!token || token === \"\" ? (\r\n                <LoginPageContainer />\r\n            ) : (\r\n                <>\r\n                    <div css={appContainerStyle}>\r\n                        <Router basename=\"/\">\r\n                            <div css={appStyle}>\r\n                                <div css={appHeaderStyle}>\r\n                                    <div css={leftHeaderStyle}>\r\n                                        <h1>music-choco</h1>\r\n                                        <div css={searchbarStyle}>\r\n                                            <Icon path={mdiMagnify} />\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={(e) =>\r\n                                                    setSearch(e.target.value)\r\n                                                }\r\n                                            ></input>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div\r\n                                        css={loggedUserStyle}\r\n                                        onClick={handleLogout}\r\n                                    >\r\n                                        <Icon\r\n                                            path={mdiAccountCircle}\r\n                                            size={1}\r\n                                        />\r\n                                        <span>{username}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <Switch>\r\n                                    <Route exact path=\"/\">\r\n                                        {search === \"\" ? (\r\n                                            <HomePageContainer />\r\n                                        ) : (\r\n                                            <SearchContainer search={search} />\r\n                                        )}\r\n                                    </Route>\r\n                                    <Route path=\"/albums/:id\">\r\n                                        <AlbumPageContainer />\r\n                                    </Route>\r\n                                </Switch>\r\n                            </div>\r\n                        </Router>\r\n                        <QueueContainer openQueue={openQueue} />\r\n                    </div>\r\n                    <AudioPlayerContainer />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { MainComponent } from \"./MainComponent\";\r\nimport { resetToken } from \"./store/actions/authActions\";\r\n\r\nexport const MainContainer = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [username, setUsername] = useState(\"username\");\r\n    const authToken = useSelector((state) => state.authReducer.token);\r\n    const uid = useSelector((state) => state.authReducer.user);\r\n    const openQueue = useSelector((state) => state.queueReducer.openQueue);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // Re-authenticate the token\r\n        if (authToken && authToken != \"null\") {\r\n            axios\r\n                .get(`${process.env.REACT_APP_API_URL}/auth`, {\r\n                    headers: { Authorization: authToken },\r\n                })\r\n                .then((res) => setUsername(res.data.username))\r\n                .catch((e) => {\r\n                    if (e.response.status === 401) dispatch(resetToken());\r\n                });\r\n        }\r\n    }, [uid]);\r\n\r\n    const handleLogout = () => {\r\n        // logout to clear the token and refresh all data\r\n        dispatch({ type: \"RESET_TOKEN\" });\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <MainComponent\r\n            token={authToken}\r\n            search={search}\r\n            username={username}\r\n            openQueue={openQueue}\r\n            setSearch={setSearch}\r\n            handleLogout={handleLogout}\r\n        />\r\n    );\r\n};\r\n","// dependancy import\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\n// component import\nimport \"./index.css\";\nimport { rootReducer } from \"./store/rootReducer\";\nimport { MainContainer } from \"./MainContainer\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <MainContainer />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// TODO: add playlist, favouraite\n// TODO: save queue on database\n"],"sourceRoot":""}