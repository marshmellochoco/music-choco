{"version":3,"sources":["Components/Slider/Slider.js","Components/AudioPlayer/Player.js","Components/Queue/Queue.js","Pages/Album/Album.js","Components/Card/Card.js","Pages/Home/Home.js","App.js","index.js"],"names":["Slider","onChange","transform","className","style","type","e","Player","queue","setQueue","playing","setPlaying","useState","currentTime","setCurrentTime","volume","setVolume","lastVolume","setLastVolume","previous","setPrevious","title","artist","album","icon","duration","songData","setSongData","ref","createRef","onReady","a","axios","get","then","result","data","setClickedTime","percent","second","current","seekTo","changePlaying","play","changeVolume","vol","nextSong","length","slice","tabIndex","width","height","loop","url","onProgress","playedSeconds","src","alt","xmlns","fill","viewBox","stroke","onClick","strokeLinecap","strokeLinejoin","strokeWidth","d","fillRule","clipRule","target","value","textAlign","Math","floor","Queue","queueData","setQueueData","getQueueData","useCallback","i","dataContainer","res","name","albumname","push","_id","useEffect","map","q","datakey","clickedItem","currentTarget","getAttribute","splice","indexOf","skipQueue","onContextMenu","removeQueue","Album","songs","setSongs","setAlbum","setArtist","id","useParams","to","s","includes","setSong","addQueue","Card","Home","albums","setAlbums","App","preventDefault","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e79542d1.chunk.js","sourcesContent":["import './Slider.css'\r\nexport const Slider = ({onChange, transform}) => {\r\n    return(\r\n        <div className=\"slider\" >\r\n            <div className='slider-front' style={{transform: `translateX(${transform}%)`}}/>\r\n            <input className='slider-back' type='range' onChange={(e) => onChange(e)}/>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nimport { Slider } from \"../Slider/Slider\";\r\nimport { createRef, useState } from \"react\";\r\n\r\nimport \"./Player.css\";\r\n\r\nexport const Player = ({ queue, setQueue, playing, setPlaying }) => {\r\n    // =============== State initialization ===============\r\n    // --------- Audio Control States ----------\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [volume, setVolume] = useState(1);\r\n    const [lastVolume, setLastVolume] = useState(volume);\r\n\r\n    // --------- Audio Player States ----------\r\n    const [previous, setPrevious] = useState([]);\r\n\r\n    // --------- Song Data Template ----------\r\n    const [songData, setSongData] = useState({\r\n        title: \"---\",\r\n        artist: \"---\",\r\n        album: \"---\",\r\n        icon: \"\",\r\n        duration: 0,\r\n    });\r\n\r\n    // =============== Functions Declaration ===============\r\n    // --------- Audio Player Functions ----------\r\n    const ref = createRef();\r\n\r\n    const onProgress = (e) => {\r\n        setCurrentTime(e.playedSeconds);\r\n        if (currentTime >= songData.duration - 1) {\r\n            setPlaying(false);\r\n            setCurrentTime(0);\r\n            nextSong();\r\n        }\r\n    };\r\n\r\n    const onReady = async () => {\r\n        await axios\r\n            .get(\"http://localhost:4000/song/\" + queue[0])\r\n            .then((result) => {\r\n                setSongData({\r\n                    title: result.data.title,\r\n                    artist: result.data.artist,\r\n                    album: result.data.album,\r\n                    duration: result.data.duration,\r\n                    icon:\r\n                        \"http://localhost:4000/album/\" +\r\n                        result.data.album +\r\n                        \"/ico\",\r\n                });\r\n            });\r\n    };\r\n\r\n    // --------- Audio Control Functions ----------\r\n    const setClickedTime = (percent) => {\r\n        let second = (percent / 100) * songData.duration;\r\n        ref.current.seekTo(second, \"second\");\r\n    };\r\n\r\n    const changePlaying = (play) => {\r\n        setPlaying(play);\r\n    };\r\n\r\n    const changeVolume = (vol) => {\r\n        setLastVolume(volume === 0 ? lastVolume : volume);\r\n        setVolume(vol);\r\n    };\r\n\r\n    const prevSong = () => {\r\n        if (previous.length < 1) {\r\n            setClickedTime(0);\r\n        } else {\r\n            setQueue([previous[0], ...queue]);\r\n            setPrevious(previous.slice(1, previous.length));\r\n        }\r\n    };\r\n\r\n    const nextSong = () => {\r\n        if (queue.length < 1) return;\r\n        if (queue.length === 1) {\r\n            setQueue([]);\r\n            setSongData({\r\n                title: \"---\",\r\n                artist: \"---\",\r\n                album: \"---\",\r\n                icon: \"\",\r\n                duration: 0,\r\n            });\r\n        } else {\r\n            setPrevious([queue[0], ...previous]);\r\n            setQueue(queue.slice(1, queue.length));\r\n        }\r\n    };\r\n\r\n    // --------- Return JSX ----------\r\n    return (\r\n        <div className=\"player\" tabIndex=\"0\">\r\n            <div>\r\n                <ReactPlayer\r\n                    ref={ref}\r\n                    width=\"0\"\r\n                    height=\"0\"\r\n                    loop={false}\r\n                    url={`http://localhost:4000/song/play/${queue[0]}`}\r\n                    playing={playing}\r\n                    volume={volume}\r\n                    onProgress={onProgress}\r\n                    onReady={onReady}\r\n                />\r\n                <div className=\"player-container\">\r\n                    <div className=\"player-playing\">\r\n                        <div className=\"icon\">\r\n                            <img src={songData.icon} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"title\">{songData.title}</div>\r\n                        <div className=\"artist\">{songData.artist}</div>\r\n                    </div>\r\n\r\n                    <div className=\"player-control\">\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"control-button\"\r\n                            fill=\"none\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            stroke=\"currentColor\"\r\n                            onClick={prevSong}\r\n                        >\r\n                            <path\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                                strokeWidth={2}\r\n                                d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\"\r\n                            />\r\n                        </svg>\r\n                        {playing ? (\r\n                            <svg\r\n                                onClick={() => changePlaying(false)}\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                className=\"control-button play\"\r\n                                fill=\"none\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                stroke=\"currentColor\"\r\n                            >\r\n                                <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth={2}\r\n                                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                                />\r\n                            </svg>\r\n                        ) : (\r\n                            <svg\r\n                                onClick={() => changePlaying(true)}\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                className=\"control-button play\"\r\n                                fill=\"none\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                stroke=\"currentColor\"\r\n                            >\r\n                                <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth={2}\r\n                                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"\r\n                                />\r\n                                <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth={2}\r\n                                    d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                                />\r\n                            </svg>\r\n                        )}\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"control-button\"\r\n                            fill=\"none\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            stroke=\"currentColor\"\r\n                            onClick={nextSong}\r\n                        >\r\n                            <path\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                                strokeWidth={2}\r\n                                d=\"M13 5l7 7-7 7M5 5l7 7-7 7\"\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n\r\n                    <div className=\"player-volume\">\r\n                        {volume === 0 ? (\r\n                            <svg\r\n                                className=\"volume-icon\"\r\n                                onClick={() => {\r\n                                    changeVolume(lastVolume);\r\n                                }}\r\n                                fill=\"currentColor\"\r\n                                viewBox=\"0 0 20 20\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    fillRule=\"evenodd\"\r\n                                    d=\"M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM12.293 7.293a1 1 0 011.414 0L15 8.586l1.293-1.293a1 1 0 111.414 1.414L16.414 10l1.293 1.293a1 1 0 01-1.414 1.414L15 11.414l-1.293 1.293a1 1 0 01-1.414-1.414L13.586 10l-1.293-1.293a1 1 0 010-1.414z\"\r\n                                    clipRule=\"evenodd\"\r\n                                />\r\n                            </svg>\r\n                        ) : (\r\n                            <svg\r\n                                className=\"volume-icon\"\r\n                                onClick={() => {\r\n                                    changeVolume(0);\r\n                                }}\r\n                                fill=\"currentColor\"\r\n                                viewBox=\"0 0 20 20\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    fillRule=\"evenodd\"\r\n                                    d=\"M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM14.657 2.929a1 1 0 011.414 0A9.972 9.972 0 0119 10a9.972 9.972 0 01-2.929 7.071 1 1 0 01-1.414-1.414A7.971 7.971 0 0017 10c0-2.21-.894-4.208-2.343-5.657a1 1 0 010-1.414zm-2.829 2.828a1 1 0 011.415 0A5.983 5.983 0 0115 10a5.984 5.984 0 01-1.757 4.243 1 1 0 01-1.415-1.415A3.984 3.984 0 0013 10a3.983 3.983 0 00-1.172-2.828 1 1 0 010-1.415z\"\r\n                                    clipRule=\"evenodd\"\r\n                                />\r\n                            </svg>\r\n                        )}\r\n                        <Slider\r\n                            onChange={(e) => changeVolume(e.target.value / 100)}\r\n                            transform={volume * 100 - 100}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"player-timeline\">\r\n                        <div\r\n                            className=\"player-time\"\r\n                            style={{ textAlign: \"right\" }}\r\n                        >\r\n                            {(currentTime / 60 < 10 ? \"0\" : \"\") +\r\n                                Math.floor(currentTime / 60)}{\" \"}\r\n                            :{\" \"}\r\n                            {(currentTime % 60 < 10 ? \"0\" : \"\") +\r\n                                Math.floor(currentTime % 60)}\r\n                        </div>\r\n\r\n                        <Slider\r\n                            onChange={(e) => {\r\n                                setClickedTime(e.target.value);\r\n                                e.target.value = 100;\r\n                            }}\r\n                            transform={\r\n                                (currentTime / songData.duration) * 100 - 100\r\n                            }\r\n                        />\r\n\r\n                        <div\r\n                            className=\"player-time\"\r\n                            style={{ textAlign: \"left\" }}\r\n                        >\r\n                            {(songData.duration / 60 < 10 ? \"0\" : \"\") +\r\n                                Math.floor(songData.duration / 60)}{\" \"}\r\n                            :{\" \"}\r\n                            {(songData.duration % 60 < 10 ? \"0\" : \"\") +\r\n                                Math.floor(songData.duration % 60)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import axios from \"axios\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport \"./Queue.css\";\r\n\r\nexport const Queue = ({ queue, setQueue, setPlaying }) => {\r\n    const [queueData, setQueueData] = useState([]);\r\n\r\n    const getQueueData = useCallback(async () => {\r\n        var data = [];\r\n        for (let i = 0; i < queue.length; i++) {\r\n            let dataContainer;\r\n            await axios\r\n                .get(\"http://localhost:4000/song/\" + queue[i])\r\n                .then((res) => {\r\n                    dataContainer = res.data;\r\n                });\r\n\r\n            await axios\r\n                .get(\"http://localhost:4000/album/\" + dataContainer.album)\r\n                .then((res) => {\r\n                    let name = res.data.albumname;\r\n                    data.push({\r\n                        _id: dataContainer._id,\r\n                        title: dataContainer.title,\r\n                        duration: dataContainer.duration,\r\n                        albumname: name,\r\n                    });\r\n                });\r\n        }\r\n        setQueueData(data);\r\n    }, [queue]);\r\n\r\n    useEffect(() => {\r\n        getQueueData();\r\n    }, [getQueueData]);\r\n\r\n    const skipQueue = (e) => {\r\n        let clickedItem = e.currentTarget.getAttribute(\"datakey\");\r\n        setQueue(queue.splice(queue.indexOf(clickedItem)));\r\n        setPlaying(true);\r\n    };\r\n\r\n    const removeQueue = (e) => {\r\n        let clickedItem = e.currentTarget.getAttribute(\"datakey\");\r\n        let q = queue;\r\n        q.splice(q.indexOf(clickedItem), 1);\r\n        setQueue([...q]);\r\n    };\r\n\r\n    const getQueueList = () => {\r\n        return queueData.map((q, i) => {\r\n            return (\r\n                <li\r\n                    key={q._id}\r\n                    className={`${\r\n                        queue[0] === q._id ? \"queueActive\" : \"queueItem\"\r\n                    }`}\r\n                    datakey={q._id}\r\n                    onClick={(e) => skipQueue(e)}\r\n                    onContextMenu={(e) => removeQueue(e)}\r\n                >\r\n                    <div className=\"num\">{i + 1}</div>\r\n                    <div>{q.title}</div>\r\n                    <div className=\"album\">{q.albumname}</div>\r\n                    <div className=\"duration\">\r\n                        {\" \"}\r\n                        {(q.duration / 60 < 10 ? \"0\" : \"\") +\r\n                            Math.floor(q.duration / 60)}{\" \"}\r\n                        :{\" \"}\r\n                        {(q.duration % 60 < 10 ? \"0\" : \"\") +\r\n                            Math.floor(q.duration % 60)}\r\n                    </div>\r\n                </li>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"queue\">\r\n            <h1>Queue</h1>\r\n            <ul className=\"queueList\">{getQueueList()}</ul>\r\n        </div>\r\n    );\r\n};\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Album.css\";\r\n\r\nexport const Album = ({ queue, setQueue, setPlaying }) => {\r\n    const [songs, setSongs] = useState([]);\r\n    const [album, setAlbum] = useState(\"\");\r\n    const [artist, setArtist] = useState(\"\");\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:4000/album/\" + id).then((res) => {\r\n            setAlbum(res.data.albumname);\r\n            setArtist(res.data.artist);\r\n        });\r\n\r\n        axios\r\n            .get(\"http://localhost:4000/album/\" + id)\r\n            .then((res) => setSongs(res.data.songs));\r\n    }, [id]);\r\n\r\n    const setSong = (id) => {\r\n        if (queue.includes(id)) {\r\n            setQueue(queue.splice(queue.indexOf(id), 1));\r\n        }\r\n        setPlaying(false);\r\n        setQueue([id, ...queue.slice(1, queue.length)]);\r\n        setPlaying(true);\r\n    };\r\n\r\n    const addQueue = (id) => {\r\n        if (!queue.includes(id)) {\r\n            setQueue([...queue, id]);\r\n        }\r\n    };\r\n\r\n    const getSongs = () => {\r\n        return songs.map((s, i) => (\r\n            <li\r\n                className={`${queue[0] === s._id ? \"activeItem\" : \"songItem\"}`}\r\n                key={s._id}\r\n                onClick={() => setSong(s._id)}\r\n                onContextMenu={(e) => addQueue(s._id)}\r\n            >\r\n                <div>{i + 1}</div>\r\n                <div>{s.title}</div>\r\n                <div>\r\n                    {(s.duration / 60 < 10 ? \"0\" : \"\") +\r\n                        Math.floor(s.duration / 60)}{\" \"}\r\n                    :{\" \"}\r\n                    {(s.duration % 60 < 10 ? \"0\" : \"\") +\r\n                        Math.floor(s.duration % 60)}\r\n                </div>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div className=\"albums\">\r\n            <h3>\r\n                <Link to=\"/\">{\"<\"} Back</Link>\r\n            </h3>\r\n            <div className=\"albumHeader\">\r\n                <img\r\n                    alt={album}\r\n                    src={`http://localhost:4000/album/${id}/ico`}\r\n                />\r\n                <div className=\"album\">\r\n                    <h1>{album}</h1>\r\n                    <h2>{artist}</h2>\r\n                </div>\r\n            </div>\r\n            <ul className=\"songList\">\r\n                <li className=\"songHeader\">\r\n                    <div>#</div>\r\n                    <div>Title</div>\r\n                    <div>Duration</div>\r\n                </li>\r\n                <hr />\r\n                {getSongs()}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./Card.css\";\r\n\r\nexport const Card = ({ id, name, artist }) => {\r\n    return (\r\n        <Link className=\"cardItem\" to={`/albums/${id}`}>\r\n            <img\r\n                src={\"http://localhost:4000/album/\" + id + \"/ico\"}\r\n                alt=\"Album Icon\"\r\n            ></img>\r\n            <h1>{name}</h1>\r\n            <p>{artist}</p>\r\n        </Link>\r\n    );\r\n};\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Card } from \"../../Components/Card/Card\";\r\nimport \"./Home.css\";\r\n\r\nexport const Home = () => {\r\n    const [albums, setAlbums] = useState([]);\r\n\r\n    // Run when page is loaded\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:4000/album\")\r\n            .then((res) => setAlbums(res.data));\r\n    }, []);\r\n\r\n    // Returns a list of card item containing album information\r\n    const getAlbums = () => {\r\n        return albums.map((album) => (\r\n            <Card\r\n                key={album.id}\r\n                id={album.id}\r\n                name={album.albumname}\r\n                artist={album.artist}\r\n            />\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Albums</h1>\r\n            <div className=\"cardList\">\r\n                {albums.length === 0 ? <h2>There is no album</h2> : getAlbums()}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import { useState } from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { Player } from \"./Components/AudioPlayer/Player\";\nimport { Queue } from \"./Components/Queue/Queue\";\nimport { Album } from \"./Pages/Album/Album\";\nimport { Home } from \"./Pages/Home/Home\";\n\nfunction App() {\n    const [queue, setQueue] = useState([]);\n    const [playing, setPlaying] = useState(false);\n\n    return (\n        <div className=\"App\" onContextMenu={(e) => e.preventDefault()}>\n            <div className=\"app-container\">\n                <Router basename=\"/react-music-player\">\n                    <div className=\"page-container\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route path=\"/albums/:id\">\n                                <Album\n                                    queue={queue}\n                                    setQueue={setQueue}\n                                    setPlaying={setPlaying}\n                                />\n                            </Route>\n                        </Switch>\n                    </div>\n                </Router>\n                <Queue queue={queue} setQueue={setQueue} setPlaying={setPlaying}/>\n                <Player\n                    queue={queue}\n                    setQueue={setQueue}\n                    playing={playing}\n                    setPlaying={setPlaying}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}